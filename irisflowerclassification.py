# -*- coding: utf-8 -*-
"""irisflowerclassification.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kxcGrJZ3UJDw0cMrdYrkjgUMH3_D0IYX
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score,classification_report,confusion_matrix

#load the iris dataset

iris=load_iris()

# create dataframe from dataset

df=pd.DataFrame(data=iris.data,columns=iris.feature_names)
df['species']=iris.target

# mapping the target values
species_map={0:'setosa',1:'versicolor',2:'virginica'}
df['species']=df['species'].map(species_map)
df.head()

# Explore and visualizing the data for more understanding

# pairplot to visualize the relationship between features

import seaborn as sns
sns.pairplot(df,hue='species',markers=['o','s','D'])
plt.show()

# boxplot to visualize the distribution of features
plt.figure(figsize=(10,5))
sns.boxplot(data=df,orient='h')
plt.show()

#preprocess the data

x = df.drop('species',axis=1)
y = df['species']

#split the data into training and testing sets

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)

# Lets Train machine learning model using K-Nearest classifier


knn_classifier = KNeighborsClassifier(n_neighbors=3)

#Train classifier

knn_classifier.fit(x_train,y_train)

#evaluate the model


# make prediction on the tet set
y_pred = knn_classifier.predict(x_test)

# calculate the accuracy of the model
accuracy = accuracy_score(y_test,y_pred)
print("Accuracy:",accuracy)

# print classification report
print(classification_report(y_test,y_pred))

# print confusion matrix
print(confusion_matrix(y_test,y_pred))

# display the confusion matrix
sns.heatmap(confusion_matrix(y_test,y_pred),annot=True,cmap='Blues', fmt='d', xticklabels=species_map.values(), yticklabels=species_map.values())
plt.show()