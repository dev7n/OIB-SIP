# -*- coding: utf-8 -*-
"""Unemployementanalysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RPJYrMcO5us8YSuB2zNRUCVtV1v1cI-L
"""

import pandas as pd

# load unemployment data
unemployment_df= pd.read_csv("/content/Unemployment in India.csv")

unemployment_df.head()

unemployment_df.info()

# check for missing values

print(unemployment_df.isnull().sum())

# drop the rows with missing values

unemployment_df.dropna(inplace=True)
print(unemployment_df.isnull().sum())

# check for duplicates


print(unemployment_df.duplicated().sum())

import matplotlib.pyplot as plt
import seaborn as sns

# Convert the 'Date' column to datetime format
unemployment_df['Date'] = pd.to_datetime(unemployment_df[' Date'])

# Calculate the mean unemployment rate over time
mean_unemployment_over_time = unemployment_df.groupby('Date')[' Estimated Unemployment Rate (%)'].mean()

# Create a line plot

plt.figure(figsize=(10, 6))
plt.plot(mean_unemployment_over_time.index, mean_unemployment_over_time.values, marker='o', linestyle='-')
plt.xlabel('Date')
plt.ylabel('Estimated Unemployment Rate (%)')
plt.title('Unemployment Rate Over Time')
plt.grid(True)

plt.show()

# unemployement rate by region
plt.figure(figsize=(14, 7))
sns.boxplot(data=unemployment_df, x='Region', y=' Estimated Unemployment Rate (%)')
plt.title('Estimated Unemployment Rate by Region')
plt.xlabel('Region')
plt.ylabel('Estimated Unemployment Rate (%)')
plt.xticks(rotation=90)
plt.grid(True)
plt.show()

# Pie Chart for Labor Participation Rate by Region
# Calculate the average labor participation rate by region
region_labor_participation = unemployment_df.groupby('Region')[' Estimated Labour Participation Rate (%)'].mean()

# Plotting the pie chart
plt.figure(figsize=(10, 7))
region_labor_participation.plot.pie(autopct='%1.1f%%', startangle=140, colormap='tab20')
plt.title('Average Labour Participation Rate by Region')
plt.ylabel('')  # Hide the y-label
plt.show()

# distribution of Estimated Unemployment Rate
plt.figure(figsize=(10, 6))
sns.histplot(unemployment_df[' Estimated Unemployment Rate (%)'], kde=True)
plt.title('Distribution of Estimated Unemployment Rate (%)')
plt.xlabel('Estimated Unemployment Rate (%)')
plt.ylabel('Frequency')
plt.grid(True)
plt.show()

# Distribution of Estimated Labour Participation Rate (%)
plt.figure(figsize=(10, 6))
sns.histplot(unemployment_df[' Estimated Labour Participation Rate (%)'], kde=True)
plt.title('Distribution of Estimated Labour Participation Rate (%)')
plt.xlabel('Estimated Labour Participation Rate (%)')
plt.ylabel('Frequency')
plt.grid(True)
plt.show()

# Scatter plot of Unemployment Rate vs. Labour Participation Rate
plt.figure(figsize=(10, 6))
sns.scatterplot(x=' Estimated Labour Participation Rate (%)', y=' Estimated Unemployment Rate (%)', data=unemployment_df)
plt.title('Estimated Unemployment Rate (%) vs. Estimated Labour Participation Rate (%)')
plt.xlabel('Estimated Labour Participation Rate (%)')
plt.ylabel('Estimated Unemployment Rate (%)')
plt.grid(True)
plt.show()



# correlation matrix
# Calculate the correlation matrix
correlation_matrix = unemployment_df[[' Estimated Unemployment Rate (%)', ' Estimated Employed', ' Estimated Labour Participation Rate (%)']].corr()

# Plot the correlation matrix
plt.figure(figsize=(8, 6))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', vmin=-1, vmax=1)
plt.title('Correlation Matrix')
plt.show()